1. What is the name of the feature responsible for generating Regex objects?
Answer: re is a python module which can be imported to generate regex objects.

2. Why do raw strings often appear in Regex objects?
Answer: raw strings appear in regex objects to keep the backward slash as it is in the string.

3. What is the return value of the search() method?
Answer: search() method return the first occurrence of the specified pattern.

4. From a Match item, how do you get the actual strings that match the pattern?
Answer: We can get all the actual string as per the matching pattern using findall(pattern, string) method.

5. In the regex which created from the r'(\d\d\d)-(\d\d\d-\d\d\d\d)', what does group zero cover?
Group 2? Group 1?
Answer: Group zero cover the whole pattern mentioned while Grop1 covers (\d\d\d) and Group2 covers (\d\d\d-\d\d\d\d).

6. In standard expression syntax, parentheses and intervals have distinct meanings. How can you tell
a regex that you want it to fit real parentheses and periods?
Answer: It can be done using backward slash just like an escape character. \(

7. The findall() method returns a string list or a list of string tuples. What causes it to return one of
the two options?
Answer: findall() return a list when there is only one group but returns a list of tuples when there are more than 2 groups.

8. In standard expressions, what does the | character mean?
Answer: it stands for or.

9. In regular expressions, what does the character stand for?
Answer: Question is not clear.

10.In regular expressions, what is the difference between the + and * characters?
Answer: + look for at least 1 or more of a pattern while * searches for 0 or more of a pattern.

11. What is the difference between {4} and {4,5} in regular expression?
Answer: {4} searches for exactly 4 times of a pattern while {4,5} searches for 4 or 5 times of a given pattern.

12. What do you mean by the \d, \w, and \s shorthand character classes signify in regular
expressions?
Answer: \d searches for single digit from 0-9, \w searches for any word character and \s searches for any whitespace character.

13. What do means by \D, \W, and \S shorthand character classes signify in regular expressions?
Answer: \D searches for non-digit character, \W searches for any non-word character and \S searches for any non-whitespace character.

14. What is the difference between (.*?) ?
Answer:(.) makes it select any character, (*) makes it select any number of times and (?) make its select a character as less as possible. Hence, ultimately it will return an empty string.

15. What is the syntax for matching both numbers and lowercase letters with a character class?
Answer: [0-9]|[a-z] is the pattern for matching both numbers and lowercase letters with a character class.

16. What is the procedure for making a normal expression in regax case-insensitive?
Answer: (?i) can be used at the start of the expression to turn on the case-insensitive mode as it only work for the expression written to the right of the statement.
However, we can use (?-i) to turn off the case-insensitive mode off also.

17. What does the . character normally match? What does it match if re.DOTALL is passed as 2nd
argument in re.compile()?
Answer: (.) character normally matches any character except a newline.
If re.DOTALL is passed as 2nd argument in re.compile(), it matches all including the next line.

18. If numReg = re.compile(r'\d+'), what will numRegex.sub('X', '11 drummers, 10 pipers, five rings, 4
hen') return?
Answer:"X drummers, X pipers, five rings, X hen" will be returned.

19. What does passing re.VERBOSE as the 2nd argument to re.compile() allow to do?
Answer: It ignores whitespace and comments while compiling the given pattern.

20. How would you write a regex that match a number with comma for every three digits? It must
match the given following:
'42'
'1,234'
'6,368,745'
but not the following
'12,34,567' (which has only two digits between the commas)
'1234' which lacks comma.
Answer: r"^\d{1,2}(,\d{3})*$"

21. How would you write a regex that matches the full name of someone whose last name is
Watanabe? You can assume that the first name that comes before it will always be one word that
begins with a capital letter. The regex must match the following:
'Haruto Watanabe'
'Alice Watanabe'
'RoboCop Watanabe'
but not the following:
'haruto Watanabe' (where the first name is not capitalized)
'Mr. Watanabe' (where the preceding word has a nonletter character)
'Watanabe' (which has no first name)
'Haruto watanabe' (where Watanabe is not capitalized)

Answer: r"^[A-Z][a-z]+ Watanabe$"

22. How would you write a regex that matches a sentence where the first word is either Alice, Bob,
or Carol; the second word is either eats, pets, or throws; the third word is apples, cats, or baseballs;
and the sentence ends with a period? This regex should be case-insensitive. It must match the
following:
'Alice eats apples'
'Bob pets cats'
'Carol throws baseballs'
'Alice throws Apples'
'BOB EATS CATS'
but not the following:
'RoboCop eats apples'
'ALICE THROWS FOOTBALLS'
'Carol eats 7 cats'
Answer: r"^(Alice|Bob|Carol) (eats|pets|throws) (apples|cats|baseballs)\.$"